// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/llravell/go-shortener/internal/usecase (interfaces: URLRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/llravell/go-shortener/internal/entity"
)

// MockURLRepo is a mock of URLRepo interface.
type MockURLRepo struct {
	ctrl     *gomock.Controller
	recorder *MockURLRepoMockRecorder
}

// MockURLRepoMockRecorder is the mock recorder for MockURLRepo.
type MockURLRepoMockRecorder struct {
	mock *MockURLRepo
}

// NewMockURLRepo creates a new mock instance.
func NewMockURLRepo(ctrl *gomock.Controller) *MockURLRepo {
	mock := &MockURLRepo{ctrl: ctrl}
	mock.recorder = &MockURLRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLRepo) EXPECT() *MockURLRepoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockURLRepo) Get(arg0 context.Context, arg1 string) (*entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockURLRepoMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockURLRepo)(nil).Get), arg0, arg1)
}

// Store mocks base method.
func (m *MockURLRepo) Store(arg0 context.Context, arg1 *entity.URL) (*entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0, arg1)
	ret0, _ := ret[0].(*entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Store indicates an expected call of Store.
func (mr *MockURLRepoMockRecorder) Store(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockURLRepo)(nil).Store), arg0, arg1)
}

// StoreMultiple mocks base method.
func (m *MockURLRepo) StoreMultiple(arg0 context.Context, arg1 []*entity.URL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreMultiple", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreMultiple indicates an expected call of StoreMultiple.
func (mr *MockURLRepoMockRecorder) StoreMultiple(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreMultiple", reflect.TypeOf((*MockURLRepo)(nil).StoreMultiple), arg0, arg1)
}
