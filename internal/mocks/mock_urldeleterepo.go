// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/llravell/go-shortener/internal/usecase (interfaces: URLDeleteRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLDeleteRepo is a mock of URLDeleteRepo interface.
type MockURLDeleteRepo struct {
	ctrl     *gomock.Controller
	recorder *MockURLDeleteRepoMockRecorder
}

// MockURLDeleteRepoMockRecorder is the mock recorder for MockURLDeleteRepo.
type MockURLDeleteRepoMockRecorder struct {
	mock *MockURLDeleteRepo
}

// NewMockURLDeleteRepo creates a new mock instance.
func NewMockURLDeleteRepo(ctrl *gomock.Controller) *MockURLDeleteRepo {
	mock := &MockURLDeleteRepo{ctrl: ctrl}
	mock.recorder = &MockURLDeleteRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLDeleteRepo) EXPECT() *MockURLDeleteRepoMockRecorder {
	return m.recorder
}

// DeleteMultiple mocks base method.
func (m *MockURLDeleteRepo) DeleteMultiple(arg0 context.Context, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMultiple", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMultiple indicates an expected call of DeleteMultiple.
func (mr *MockURLDeleteRepoMockRecorder) DeleteMultiple(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMultiple", reflect.TypeOf((*MockURLDeleteRepo)(nil).DeleteMultiple), arg0, arg1, arg2)
}
